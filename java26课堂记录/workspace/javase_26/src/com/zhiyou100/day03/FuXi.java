package com.zhiyou100.day03;

public class FuXi {

	public static void main(String[] args) {
		/*
		 * 
		 * 数据类型：
		 *     整数类型
		 *     byte   字节型    占1个字节    [-128,127]
		 *     short  短整型        2      [-32000,32000]
		 *     int    整型            4      一个整数 默认是int类型
		 *     long   长整型       8   long类型的数据后面加l/L
		 *     浮点类型：
		 *     float  单精度      4    float类型的数据后面加f/F
		 *     double 双精度     8    一个浮点类型的数据 默认是double
		 *     字符类型
		 *     char   字符型     2   字符常量必须写在单引号中  单引号中有且只有一个字符
		 *                       '1'  ' '
		 *     布尔类型
		 *     boolean  布尔型  1 true/false
		 *     
		 * 数据类型转换
		 *     自动类型转换情况一：
		 *         格式：高精度变量=低精度数据;
		 *         float f=1; 编译器自动会把4个字节int类型的1 自动转换为4个字节float类型的1.0f 然后赋值
		 *     自动类型转换情况二：
		 *         格式：byte/short/char类型的变量=int常量值;
		 *         byte b1=11;编译器自动判断byte是否可以装下11 如果能装下就装  装不下就报错
		 *     强制类型转换：
		 *         格式： 低精度变量=(低精度变量的类型)高精度数据;
		 *         float f1=(float)1.1;
		 * 常量和变量
		 *     定义变量的格式：数据类型 变量名;
		 *     变量赋值的格式：变量名=值;
		 *     
		 *     注意：1 变量必须先定义再赋值 然后使用
		 *         2  变量赋的值的类型必须和变量一致
		 *         3  变量只能定义一次  可以赋值和使用多次
		 *         4 赋值时 左边必须是变量
		 * 运算符：
		 *     算术运算符：+ - *　　／
		 *     　　　　　　　　 +：加法运算
		 *             +：作为正号
		 *             +：字符串连接符
		 *                  打印输出语句中带双引号的就是字符串
		 *                  字符串前后的+就是字符串连接符：
		 *                  任何数据与字符串连接都会形成一个新的字符串
		 *                  1+2+"a"+1+2="3a12"
		 *              % 求余 取模
		 *                  n%m= n除以m得到一个整数 除不尽的那部分
		 *                  n%m的值的取值范围是[0,m)
		 *              ++  --:自增自减
		 *                  a++;完全等价于 a=(a的类型)(a+1)
		 *                  
		 *     比较运算符:  > >= < <=
		 *              ==  !=
		 *     赋值运算符: =
		 *              +=  -= *=  /=  %=
		 *              a+=b;完全等价于 a=(a的类型)(a+b);
		 *     逻辑运算符
		 *     位运算符
		 *     三元运算符
		 *                 
		 *              
		 *                       
		 *     
		 * 常量和变量：
		 * 数据类型转换：
		 * 运算符：
		 * 
		 * */
		byte b1=11;
		int i1=11;
		b1=(byte)133;
		System.out.println("b1="+b1);//-123
        
		
	}

}
