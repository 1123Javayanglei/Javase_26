package com.zhiyou100.day07;

public class ZuoYe3 {

	public static void main(String[] args) {
//		 扩展题1：
//		    通过二维数组实现杨辉三角
//		    杨辉三角
//			1
//			1	1
//			1	2	1
//			1	3	3	1
//			1	4	6	4	1
//			1	5	10	10	5	1
//			1	6	15	20	15	6	1
		/*
		 * 总结规律： 1  每一层都比上层元素个数多一个
		 *        2 每层的起始和结束都是1
		 *        3 除了起始和结束的元素   其他元素等于其左上角的两个元素之和：
		 *          arr[i][j]= arr[i-1][j]+arr[i-1][j-1]      
		*/
		 int[][] arr=new int[10][];//前10行  每行对应一个一维数组
		 //遍历二维数组
		 for (int i = 0; i < arr.length; i++) {
			   //当前一维数组时arr[i] 赋值
			  arr[i]=new int[i+1];//当前一维数组 应该有i+1个元素
			  //给一维数组的元素赋值
			  for (int j = 0; j < arr[i].length; j++) {
				   if(j==0||j==arr[i].length-1) {
					   arr[i][j]=1;
				   }else {
					   arr[i][j]= arr[i-1][j]+arr[i-1][j-1];
				   }
			  }
		 }
		 //遍历打印二维数组
		 for (int i = 0; i < arr.length; i++) {
			for (int j = 0; j < arr[i].length; j++) {
				System.out.print(arr[i][j]+(j==arr[i].length-1?"\n":"\t"));
			}
		}
		 
//		 扩展题2：
//		    验证角谷猜想：
//		         任给一个自然数，若为偶数除以2，若为奇数则乘3 加1，
//		         得到一个新的自然数后按照上面的法则继续计算，
//			     若干次后得到的结果必然为1。
//		         写一个方法 请求出10到1000内的所有数 经过运算得到1时 各需要的多少步
		  //定义变量n让其从10跑到1000
		 for (int n = 10; n < 1000; n++) {
			    //判断当前n运算到1 经过的步数
			    int buShu=0;
			    //定义变量记录当前n的值
			    int k=n;
			    //对当前n进行运算
			    while(true) {
			    	if(k%2==0) {
			    		k/=2;
			    	}else {
			    		k=k*3+1;
			    	}
			    }
		 }

	}

}
