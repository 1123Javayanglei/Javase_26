package com.zhiyou100.day07;

public class ZuoYe2 {

	public static void main(String[] args) {

//		 4   通过循环证明：所有大于等于4 小于1000的偶数都可以被拆分为两个质数的和
//		           如：6=3+3  8=3+5
		  //定义一个变量n 让其从4跑到1000
		  //在循环中来判断n是否可以被拆分为两个质数： 这两个质数肯定比n小
		  //n=h+k
		  //定义一个变量m 让其从2跑到n/2 判断m是不是质数    如果m是质数  再判断n-m是否是质数
		  //此时m和n-m就是我们所求的数
		
		  for (int n = 4; n <=1000; n+=2) {
			   //判断当前n是否可以被拆分为两个质数
			   //定义变量让其从2判断n/2
			   for (int m = 2; m <=n/2; m++) {
				    //判断当前m是否为质数
				    boolean b1=true;
				    for (int k = 2; k <= Math.sqrt(m); k++) {
						 if(m%k==0) {
							 b1=false;break;
						 }
					}
				    if(m!=1&&b1==true) {
				    	//当前m是质数
				    	//在判断n-m是否是质数
					    boolean b2=true;
					    for (int k = 2; k <= Math.sqrt(n-m); k++) {
							 if((n-m)%k==0) {
								 b2=false;break;
							 }
						}
					    if((n-m)!=1&&b2==true) {
					    	System.out.println(n+"="+m+"+"+(n-m));
					    }
				    }
			   }
		  }
		 
//		 5  留下你的宝贵意见
//		 扩展题1：
//		    通过二维数组实现杨辉三角
//		    杨辉三角
//			1
//			1	1
//			1	2	1
//			1	3	3	1
//			1	4	6	4	1
//			1	5	10	10	5	1
//			1	6	15	20	15	6	1
//		 扩展题2：
//		    验证角谷猜想：
//		         任给一个自然数，若为偶数除以2，若为奇数则乘3 加1，
//		         得到一个新的自然数后按照上面的法则继续计算，
//			     若干次后得到的结果必然为1。
//		         写一个方法 请求出10到1000内的所有数 经过运算得到1时 各需要的多少步

	}

}
