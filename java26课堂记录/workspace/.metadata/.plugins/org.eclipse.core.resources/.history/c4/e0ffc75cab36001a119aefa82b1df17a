package com.zhiyou100.day09;

public class LianXi1 {

	public static void main(String[] args) {
		test5(98);
//		String s="abc";
//		s=s+1;
//		System.out.println(s);
//		s="abc";
//		s=1+s;
//		System.out.println(s);

	}
	//5 三天打渔 两天晒网  求从2000-1-1开始  到参数年月日时  是在打渔还是晒网
	public static void  test5(int year,int month,int day) {//2010  10 10
		 //获取2000年1-1至参数年月日的天数 days  获取days%5的余数即可  余数为1-3 为打渔  0 4 晒网
		 //判断参数年月日是否合理
		  if(year<2000) {
			  System.out.println(year+"年"+month+"月"+day+"日不在2000 1 1日之后 日期不合理");
			  return;
		  }
		  //定义变量记录天数
		  int days=0;
		  //定义for循环跑完所有的年
		  for (int yearN = 2000; yearN < year; yearN++) {
			  //获取yearN年的天数
			  //判断当前年是不是闰年
			  boolean b=isRunNian(yearN);
			  if(b==true) {
				  days+=366;
			  }else {
				  days+=365;
			  }
		  }
		  //把year年的前month-1月跑完
		  for (int monthN = 1; monthN < month; monthN++) {
			  
		  }
		  
	}
	//写一个方法判断是否为闰年
	public static boolean isRunNian(int year) {
		return (year%4==0&&year%100!=0)||(year%400==0);
	}
	//写一个方法求参数年月的天数
	public static boolean isRunNian(int year) {
		return (year%4==0&&year%100!=0)||(year%400==0);
	}
	//4 获取打印一个int的二进制  循环的拿n/2获取余数  直到余数为1 结束
	public static void test5(int n) {
		  //定义一个字符串记录 结果
		  String s="";
		  int k=n;//定义变量记录n的值
	      while(true) {
	    	  if(k<2) {
	    		  s=k+s;//把最后的除数也拼接到字符串中
	    		  break;
	    	  }
	    	  //获取余数
	    	  int ys=k%2;
	    	  s=ys+s;//把余数拼接到字符串中
	    	  //让k取值k/2
	    	  k/=2;
	      }
	      System.out.println(s);
	}
	//3 斐波那契数列 0 1 1 2 3 5 8 13 21
	public static void  test4(int n) {
		//定义变量记录前两项
		int a=0,b=1;//ciShu=3 a=1 b=1 
		            //ciShu=4 a=1 b=2
		            //ciShu=5 a=2 b=3
		for (int ciShu = 1; ciShu <=n; ciShu++) {
			if(ciShu==1) {
				System.out.print(a+"\t");
			}else if(ciShu==2) {
				System.out.print(b+"\t");
			}else {
				int k=b;
				b=a+b;//让b记录原来a+b的和
				a=k;//让a记录原来b的值
				System.out.print(b+"\t");
			}
		}
	}
	//1  获取abcd  =  (ab+cd)*(ab+cd);
	public static void  test1() {
		//定义变量 跑完所有的四位数
		for (int n = 1000; n < 10000; n++) {
			 //由abcd获取ab和cd
			 int ab=n/100;
			 int cd=n%100;
			 int sum=(ab+cd)*(ab+cd);
			 if(sum==n) {
				 System.out.println("n="+n);
			 }
		}
	}
	//2  输出菱形  9行
	     
	/*                行数i    开启打印星的位置j   结束打印星的位置j
	 *     *           1         5              5
	 *    ***          2         4              6          
	 *   *****         3         3              7
	 *  *******
	 * *********
	 *                          6-i             4+i
	               
	 *  *******        1         2              8
	 *   *****         2         3              7
	 *    ***          3         4              6
	 *     *  
	 *                           i+1           9-i
	 
	 * 先打印空格  再打印星  再打印换行
	 * 二维图形题：
	 *       必定要用两层for循环：外层for循环的变量i控制行数  内层for循环的变量j控制每行打印的列数
	 */
	public static void  test2() {
		//打前5行
		for (int i =1; i <=5; i++) {
			for (int j =1; j <=4+i; j++) {
				if(j<6-i) {//在6-i之前打印空格  以后打印星
					System.out.print(" ");
				}else {
					System.out.print("*");
				}
			}
			System.out.println();
		}
		//打后4行
		for (int i =1; i <=4; i++) {
			for (int j =1; j <=9-i; j++) {
				if(j<i+1) {//在i+1之前打印空格  以后打印星
					System.out.print(" ");
				}else {
					System.out.print("*");
				}
			}
			System.out.println();
		}
	}
	//2  输出菱形  9行
    
		/*                行数i    第一个星的位置j   第二个星的位置j
		 *     *           1         5              5
		 *    * *          2         4              6          
		 *   *   *         3         3              7
		 *  *     *
		 * *       *
		 *                          6-i             4+i
		               
		 *  *     *        1         2              8
		 *   *   *         2         3              7
		 *    * *          3         4              6
		 *     *  
		 *                           i+1           9-i
		 
		 * 先打印空格  再打印星  再打印换行
		 * 二维图形题：
		 *       必定要用两层for循环：外层for循环的变量i控制行数  内层for循环的变量j控制每行打印的列数
		 */
		public static void  test3() {
			//打前5行
			for (int i =1; i <=5; i++) {
				for (int j =1; j <=4+i; j++) {
					if(j==6-i||j ==4+i) {//在6-i和4+i位置处打印星
						System.out.print("*");
					}else {
						System.out.print(" ");
					}
				}
				System.out.println();
			}
			//打后4行
			for (int i =1; i <=4; i++) {
				for (int j =1; j <=9-i; j++) {
					if(j==i+1||j ==9-i) {////在9-i和i+1位置处打印星
						System.out.print("*");
					}else {
						System.out.print(" ");
					}
				}
				System.out.println();
			}
		}

}
